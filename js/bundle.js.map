{"version":3,"sources":["app.js","controllers/ApplicationCtrl.js","controllers/NavCtrl.js","directives/semanticFormDirective.js","directives/additional-occupants/additionalOccupantFieldsDirective.js","directives/address-inputs/addressInputsDirective.js","directives/mainNav/mainNavDirective.js"],"names":["angular","module","run","$rootScope","state","config","$stateProvider","$urlRouterProvider","otherwise","url","templateUrl","controller","$scope","template","application","user","firstName","middleName","lastName","birthdate","email","phone","ssn","driversLicence","currentResidence","street","city","zip","publicNavLinks","link","name","residentNavLinks","adminNavLinks","updateNav","links","$watch","newVal","oldVal","directive","restrict","scope","elem","attrs","$","dropdown","num","getNumOccupants","Array","modelKey","model","toggleMenu","sidebar","getListItemWidth","numLinks","length","width","listItemWidth"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ngSanitize', 'ngMessages', 'ui.router'])\n    .run(function($rootScope) {\n        $rootScope.state = 1;\n    })\n    .config(function($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/public/home.html',\n                controller: function($scope, $rootScope) {\n                    $rootScope.state = 1;\n                }\n            })\n            .state('properties', {\n                url: '/properties',\n                templateUrl: './views/public/properties.html'\n                // controller: ''\n            })\n            .state('apply', {\n                url: '/apply',\n                templateUrl: './views/public/apply.html',\n                controller: 'ApplicationCtrl'\n            })\n            .state('loginSignup', {\n                url: '/login-signup',\n                templateUrl: './views/public/login-signup.html'\n                // controller: ''\n            })\n            .state('contact', {\n                url: '/contact',\n                templateUrl: './views/public/contact.html'\n                // controller: ''\n            })\n            .state('resident', {\n                url: '/resident',\n                template: '<h1>Resident Page</h1>',\n                controller: function($scope, $rootScope) {\n                    $rootScope.state = 2;\n                }\n            })\n            .state('admin', {\n                url: '/admin',\n                template: '<h1>Admin Page</h1>',\n                controller: function($scope, $rootScope) {\n                    $rootScope.state = 3;\n                }\n            })\n    });\n","angular.module('app')\n    .controller('ApplicationCtrl', function($scope) {\n      $scope.application = {\n\n      }\n      var user = {\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        birthdate: '',\n        email: '',\n        phone: '',\n        ssn: '',\n        driversLicence: ''\n      }\n      var currentResidence = {\n        street: '',\n        city: '',\n        state: '',\n        zip: ''\n      }\n    });\n","angular.module('app')\n    .controller('NavCtrl', function($scope, $rootScope) {\n        var publicNavLinks = [{\n                link: 'properties',\n                name: 'Properties'\n            },\n            {\n                link: 'apply',\n                name: 'Apply'\n            },\n            {\n                link: 'contact',\n                name: 'Contact'\n            },\n            {\n                link: 'loginSignup',\n                name: 'Residents'\n            }\n        ];\n        var residentNavLinks = [{\n                link: 'maintenance',\n                name: 'Maintenance Request'\n            },\n            {\n                link: 'rentPay',\n                name: 'Pay Rent'\n            }\n        ];\n        var adminNavLinks = [{\n                link: 'maintenanceRequests',\n                name: 'Maintenance Requests'\n            },\n            {\n                link: 'tenents',\n                name: 'Tenent Info'\n            },\n            {\n                link: 'propertyInfo',\n                name: 'Property Info'\n            }\n        ];\n\n        function updateNav() {\n            switch ($rootScope.state) {\n                case 1:\n                    $scope.links = publicNavLinks;\n                    break;\n                case 2:\n                    $scope.links = residentNavLinks;\n                    break;\n                case 3:\n                    $scope.links = adminNavLinks;\n                    break;\n                default:\n                    $scope.links = publicNavLinks;\n                    break;\n            }\n        }\n\n        $rootScope.$watch('state', (newVal, oldVal) => {\n            if (newVal != oldVal) {\n                updateNav();\n            }\n        });\n\n        updateNav();\n    });\n","angular.module('app')\n    .directive('semanticForm', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, elem, attrs) {\n                $('.dropdown').dropdown();\n            }\n        };\n    });\n","angular.module('app')\n    .directive('additionalOccupantFields', function() {\n        return {\n            restrict: 'E',\n            templateUrl: './js/directives/additional-occupants/additional-occupant-fields.html',\n            scope: {\n                num: '='\n            },\n            link: function(scope, elem, attrs) {\n                scope.getNumOccupants = function() {\n                    return new Array(scope.num);\n                }\n            }\n        };\n    });\n","angular.module('app')\n    .directive('addressInputs', function() {\n        return {\n            restrict: 'E',\n            templateUrl: './js/directives/address-inputs/address-inputs.html',\n            scope: {\n                modelKey: '@',\n                model: '='\n            },\n            link: function(scope, elem, attrs) {}\n        };\n    });\n","angular.module('app')\n    .directive('mainNav', function() {\n        return {\n            restrict: 'E',\n            templateUrl: './js/directives/mainNav/main-nav.html',\n            scope: {\n                links: '='\n            },\n            link: function(scope, elem, attrs) {\n                scope.toggleMenu = function() {\n                    $('#nav-collapse').sidebar('toggle');\n                }\n            },\n            controller: function($scope) {\n                function getListItemWidth() {\n                    var numLinks = $scope.links.length;\n                    var width = 100 / numLinks;\n                    $scope.listItemWidth = `${width}%`;\n                }\n\n                $scope.$watch('links', (newVal, oldVal) => {\n                    if (newVal != oldVal) {\n                        getListItemWidth();\n                    }\n                })\n\n                getListItemWidth();\n            }\n        };\n    });\n"]}